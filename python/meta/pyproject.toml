[project]
name = "meta"
version = "0.1.0"
description = "Meta Puzzles"
readme = "README.md"
authors = [
    { name = "Alex Berger", email = "alexbigkid@users.noreply.github.com" }
]
requires-python = ">=3.13"
dependencies = []


[dependency-groups]
dev = [
    "coverage",
    "parameterized",
    "ruff",
    "pytest",
    "pytest-cov"
]


[tool.uv]
managed = true


[project.scripts]
meta = "meta:main"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.wheel]
include = ["src/meta"]
sources = ["src"]


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]


[tool.coverage.run]
source = ["meta"]
branch = true


[tool.coverage.report]
show_missing = true
skip_covered = true


[tool.ruff]
line-length = 180
indent-width = 4
src = ["src", "tests"]

[tool.ruff.lint]
preview = true
select = [
    # pycodestyle
    "E",
    "W",
    # pydocstyle
    "D",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    "E302",
    "F401"
]
extend-ignore = ["D203", "E231", "E202", "S108", "D103", "S101", "D100"]


[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.format]
line-ending = "lf"
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
docstring-code-format = true


[tool.ruff.lint.isort]
lines-after-imports = 2


[tool.hatch.build]
include = ["src/meta"]
